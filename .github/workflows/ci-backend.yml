name: Backend CI/CD

on:
  push:
    branches: [ "main" ]
    paths:
      - 'services/**'
      - '.github/workflows/**'
      - 'kubernetes/**'

jobs:
  build-and-test:
    name: Build, Test, and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: pip install -r services/product-service/requirements.txt
      
      - name: Run Tests
        run: pytest tests/test_product_service.py
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./services/product-service
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/product-service:latest

  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: build-and-test # This job runs only after build-and-test succeeds

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region us-east-1 --name devops-ecom-cluster

      - name: Deploy to EKS
        run: |
          kubectl apply -f kubernetes/manifests/product-service-deployment.yaml
          kubectl apply -f kubernetes/manifests/product-service-service.yaml
